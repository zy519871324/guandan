{"ast":null,"code":"export default {\n  name: 'ParticleEffect',\n  props: {\n    color: {\n      type: String,\n      default: '#ffd700'\n    },\n    count: {\n      type: Number,\n      default: 20\n    }\n  },\n  data() {\n    return {\n      particles: []\n    };\n  },\n  methods: {\n    createParticle() {\n      const particle = {\n        x: Math.random() * 100,\n        y: Math.random() * 100,\n        size: Math.random() * 3 + 2,\n        speedX: (Math.random() - 0.5) * 8,\n        speedY: (Math.random() - 0.5) * 8,\n        opacity: 1,\n        style: {}\n      };\n      this.updateParticleStyle(particle);\n      return particle;\n    },\n    updateParticleStyle(particle) {\n      particle.style = {\n        left: `${particle.x}%`,\n        top: `${particle.y}%`,\n        width: `${particle.size}px`,\n        height: `${particle.size}px`,\n        opacity: particle.opacity,\n        backgroundColor: this.color\n      };\n    },\n    animate() {\n      this.particles.forEach(particle => {\n        particle.x += particle.speedX;\n        particle.y += particle.speedY;\n        particle.opacity -= 0.02;\n        this.updateParticleStyle(particle);\n      });\n      this.particles = this.particles.filter(p => p.opacity > 0);\n      if (this.particles.length > 0) {\n        requestAnimationFrame(this.animate);\n      }\n    },\n    start() {\n      this.particles = Array(this.count).fill().map(() => this.createParticle());\n      this.animate();\n    }\n  },\n  mounted() {\n    this.start();\n  }\n};","map":{"version":3,"names":["name","props","color","type","String","default","count","Number","data","particles","methods","createParticle","particle","x","Math","random","y","size","speedX","speedY","opacity","style","updateParticleStyle","left","top","width","height","backgroundColor","animate","forEach","filter","p","length","requestAnimationFrame","start","Array","fill","map","mounted"],"sources":["/Users/zhangyang/Desktop/py/guandan/frontend/src/components/ParticleEffect.vue"],"sourcesContent":["<template>\n  <div class=\"particle-container\" ref=\"container\">\n    <div v-for=\"(particle, index) in particles\" \n         :key=\"index\" \n         class=\"particle\"\n         :style=\"particle.style\">\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ParticleEffect',\n  props: {\n    color: {\n      type: String,\n      default: '#ffd700'\n    },\n    count: {\n      type: Number,\n      default: 20\n    }\n  },\n  data() {\n    return {\n      particles: []\n    }\n  },\n  methods: {\n    createParticle() {\n      const particle = {\n        x: Math.random() * 100,\n        y: Math.random() * 100,\n        size: Math.random() * 3 + 2,\n        speedX: (Math.random() - 0.5) * 8,\n        speedY: (Math.random() - 0.5) * 8,\n        opacity: 1,\n        style: {}\n      }\n      this.updateParticleStyle(particle);\n      return particle;\n    },\n    updateParticleStyle(particle) {\n      particle.style = {\n        left: `${particle.x}%`,\n        top: `${particle.y}%`,\n        width: `${particle.size}px`,\n        height: `${particle.size}px`,\n        opacity: particle.opacity,\n        backgroundColor: this.color\n      }\n    },\n    animate() {\n      this.particles.forEach(particle => {\n        particle.x += particle.speedX;\n        particle.y += particle.speedY;\n        particle.opacity -= 0.02;\n        this.updateParticleStyle(particle);\n      });\n      \n      this.particles = this.particles.filter(p => p.opacity > 0);\n      \n      if (this.particles.length > 0) {\n        requestAnimationFrame(this.animate);\n      }\n    },\n    start() {\n      this.particles = Array(this.count).fill().map(() => this.createParticle());\n      this.animate();\n    }\n  },\n  mounted() {\n    this.start();\n  }\n}\n</script>\n\n<style scoped>\n.particle-container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 1000;\n}\n\n.particle {\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity 0.1s linear;\n}\n</style> "],"mappings":"AAWA,eAAe;EACbA,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,KAAK,EAAE;MACLH,IAAI,EAAEI,MAAM;MACZF,OAAO,EAAE;IACX;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf,MAAMC,QAAO,GAAI;QACfC,CAAC,EAAEC,IAAI,CAACC,MAAM,CAAC,IAAI,GAAG;QACtBC,CAAC,EAAEF,IAAI,CAACC,MAAM,CAAC,IAAI,GAAG;QACtBE,IAAI,EAAEH,IAAI,CAACC,MAAM,CAAC,IAAI,IAAI,CAAC;QAC3BG,MAAM,EAAE,CAACJ,IAAI,CAACC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QACjCI,MAAM,EAAE,CAACL,IAAI,CAACC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;QACjCK,OAAO,EAAE,CAAC;QACVC,KAAK,EAAE,CAAC;MACV;MACA,IAAI,CAACC,mBAAmB,CAACV,QAAQ,CAAC;MAClC,OAAOA,QAAQ;IACjB,CAAC;IACDU,mBAAmBA,CAACV,QAAQ,EAAE;MAC5BA,QAAQ,CAACS,KAAI,GAAI;QACfE,IAAI,EAAE,GAAGX,QAAQ,CAACC,CAAC,GAAG;QACtBW,GAAG,EAAE,GAAGZ,QAAQ,CAACI,CAAC,GAAG;QACrBS,KAAK,EAAE,GAAGb,QAAQ,CAACK,IAAI,IAAI;QAC3BS,MAAM,EAAE,GAAGd,QAAQ,CAACK,IAAI,IAAI;QAC5BG,OAAO,EAAER,QAAQ,CAACQ,OAAO;QACzBO,eAAe,EAAE,IAAI,CAACzB;MACxB;IACF,CAAC;IACD0B,OAAOA,CAAA,EAAG;MACR,IAAI,CAACnB,SAAS,CAACoB,OAAO,CAACjB,QAAO,IAAK;QACjCA,QAAQ,CAACC,CAAA,IAAKD,QAAQ,CAACM,MAAM;QAC7BN,QAAQ,CAACI,CAAA,IAAKJ,QAAQ,CAACO,MAAM;QAC7BP,QAAQ,CAACQ,OAAM,IAAK,IAAI;QACxB,IAAI,CAACE,mBAAmB,CAACV,QAAQ,CAAC;MACpC,CAAC,CAAC;MAEF,IAAI,CAACH,SAAQ,GAAI,IAAI,CAACA,SAAS,CAACqB,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACX,OAAM,GAAI,CAAC,CAAC;MAE1D,IAAI,IAAI,CAACX,SAAS,CAACuB,MAAK,GAAI,CAAC,EAAE;QAC7BC,qBAAqB,CAAC,IAAI,CAACL,OAAO,CAAC;MACrC;IACF,CAAC;IACDM,KAAKA,CAAA,EAAG;MACN,IAAI,CAACzB,SAAQ,GAAI0B,KAAK,CAAC,IAAI,CAAC7B,KAAK,CAAC,CAAC8B,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,MAAM,IAAI,CAAC1B,cAAc,CAAC,CAAC,CAAC;MAC1E,IAAI,CAACiB,OAAO,CAAC,CAAC;IAChB;EACF,CAAC;EACDU,OAAOA,CAAA,EAAG;IACR,IAAI,CAACJ,KAAK,CAAC,CAAC;EACd;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}