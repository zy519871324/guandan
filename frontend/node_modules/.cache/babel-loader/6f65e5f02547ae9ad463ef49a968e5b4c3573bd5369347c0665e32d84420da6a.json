{"ast":null,"code":"import Card from '../components/Card.vue';\nimport ParticleEffect from '../components/ParticleEffect.vue';\nimport FireworkEffect from '../components/FireworkEffect.vue';\nimport SoundManager from '../components/SoundManager.vue';\nimport { io } from 'socket.io-client';\nexport default {\n  name: 'Game',\n  components: {\n    Card,\n    ParticleEffect,\n    FireworkEffect,\n    SoundManager\n  },\n  data() {\n    return {\n      socket: null,\n      roomId: null,\n      currentLevel: 2,\n      playerHand: [],\n      selectedCards: [],\n      otherPlayers: [],\n      gameEnd: false,\n      gameEndMessage: '',\n      canPlay: false,\n      canPass: false,\n      isShuffling: false,\n      isDealing: false,\n      dealingCards: [],\n      showParticles: false,\n      particleColor: '#ffd700',\n      showFireworks: false\n    };\n  },\n  created() {\n    this.roomId = this.$route.params.roomId;\n    this.connectSocket();\n  },\n  methods: {\n    connectSocket() {\n      this.socket = io('http://localhost:8000');\n      this.socket.on('connect', () => {\n        console.log('Connected to server');\n        if (this.roomId) {\n          this.socket.emit('join_room', {\n            room_id: this.roomId\n          });\n        } else {\n          this.socket.emit('create_room');\n        }\n      });\n      this.socket.on('room_created', data => {\n        this.roomId = data.room_id;\n        this.$router.push(`/game/${this.roomId}`);\n      });\n      this.socket.on('game_state_update', data => {\n        this.updateGameState(data);\n      });\n      this.socket.on('card_played', data => {\n        this.handleCardPlayed(data);\n      });\n      this.socket.on('turn_passed', data => {\n        this.handleTurnPassed(data);\n      });\n      this.socket.on('game_end', data => {\n        this.handleGameEnd(data);\n      });\n    },\n    updateGameState(data) {\n      this.currentLevel = data.current_level;\n      this.playerHand = data.players_hands[0];\n      this.updateOtherPlayers(data);\n      this.updateControls(data);\n    },\n    updateOtherPlayers(data) {\n      this.otherPlayers = data.players_hands.slice(1).map((hand, index) => ({\n        name: `玩家${index + 2}`,\n        cardCount: hand.length,\n        lastPlayedCards: data.last_played_cards,\n        isActive: data.current_player === index + 1,\n        avatar: `/assets/images/avatar${index % 4 + 1}.png`\n      }));\n    },\n    updateControls(data) {\n      this.canPlay = data.current_player === 0;\n      this.canPass = data.last_played_cards && data.current_player === 0;\n    },\n    toggleCardSelection(card) {\n      if (!this.canPlay) return;\n      const index = this.selectedCards.indexOf(card);\n      if (index === -1) {\n        this.selectedCards.push(card);\n      } else {\n        this.selectedCards.splice(index, 1);\n      }\n    },\n    playCards() {\n      if (this.selectedCards.length === 0) return;\n      this.socket.emit('play_card', {\n        room_id: this.roomId,\n        cards: this.selectedCards\n      });\n      this.showParticles = true;\n      this.$refs.soundManager.playCardSound();\n      setTimeout(() => {\n        this.showParticles = false;\n      }, 1000);\n      this.selectedCards = [];\n    },\n    passTurn() {\n      this.socket.emit('pass_turn', {\n        room_id: this.roomId\n      });\n    },\n    handleCardPlayed(data) {\n      // 更新其他玩家的出牌信息\n      const playerIndex = this.otherPlayers.findIndex(p => p.name === data.player);\n      if (playerIndex !== -1) {\n        this.otherPlayers[playerIndex].lastPlayedCards = data.cards;\n      }\n    },\n    handleTurnPassed(data) {\n      // 更新过牌信息\n      const playerIndex = this.otherPlayers.findIndex(p => p.name === data.player);\n      if (playerIndex !== -1) {\n        this.otherPlayers[playerIndex].lastPlayedCards = null;\n      }\n    },\n    handleGameEnd(data) {\n      this.gameEnd = true;\n      const isWinner = data.winner_team === 0;\n      this.gameEndMessage = isWinner ? '恭喜你获胜！' : '很遗憾，你输了。';\n      if (isWinner) {\n        this.showFireworks = true;\n        this.$refs.soundManager.playWinSound();\n        this.$refs.soundManager.playFireworkSound();\n      } else {\n        this.$refs.soundManager.playLoseSound();\n      }\n      if (data.new_level > this.currentLevel) {\n        this.$refs.soundManager.playLevelUpSound();\n      }\n    },\n    startNewGame() {\n      this.gameEnd = false;\n      this.showFireworks = false;\n      this.$refs.soundManager.playButtonSound();\n      this.socket.emit('create_room');\n    },\n    getShufflePosition(index) {\n      const centerX = window.innerWidth / 2;\n      const centerY = window.innerHeight / 2;\n      const radius = 200;\n      const angle = index / 52 * Math.PI * 2;\n      return {\n        x: centerX + Math.cos(angle) * radius,\n        y: centerY + Math.sin(angle) * radius\n      };\n    },\n    startShuffleAnimation() {\n      this.isShuffling = true;\n      this.$refs.soundManager.playShuffleSound();\n      setTimeout(() => {\n        this.isShuffling = false;\n        this.startDealingAnimation();\n      }, 2000);\n    },\n    startDealingAnimation() {\n      this.isDealing = true;\n      this.dealingCards = [...this.playerHand];\n      this.$refs.soundManager.playDealSound();\n      setTimeout(() => {\n        this.isDealing = false;\n      }, 3000);\n    },\n    getDealingPosition(index) {\n      const centerX = window.innerWidth / 2;\n      const centerY = window.innerHeight / 2;\n      const targetX = index % 13 * 80 - 520;\n      const targetY = Math.floor(index / 13) * 120 - 60;\n      return {\n        x: centerX + targetX,\n        y: centerY + targetY\n      };\n    },\n    getAvatarUrl(avatar) {\n      return avatar || './assets/images/default-avatar.jpg';\n    }\n  }\n};","map":{"version":3,"names":["Card","ParticleEffect","FireworkEffect","SoundManager","io","name","components","data","socket","roomId","currentLevel","playerHand","selectedCards","otherPlayers","gameEnd","gameEndMessage","canPlay","canPass","isShuffling","isDealing","dealingCards","showParticles","particleColor","showFireworks","created","$route","params","connectSocket","methods","on","console","log","emit","room_id","$router","push","updateGameState","handleCardPlayed","handleTurnPassed","handleGameEnd","current_level","players_hands","updateOtherPlayers","updateControls","slice","map","hand","index","cardCount","length","lastPlayedCards","last_played_cards","isActive","current_player","avatar","toggleCardSelection","card","indexOf","splice","playCards","cards","$refs","soundManager","playCardSound","setTimeout","passTurn","playerIndex","findIndex","p","player","isWinner","winner_team","playWinSound","playFireworkSound","playLoseSound","new_level","playLevelUpSound","startNewGame","playButtonSound","getShufflePosition","centerX","window","innerWidth","centerY","innerHeight","radius","angle","Math","PI","x","cos","y","sin","startShuffleAnimation","playShuffleSound","startDealingAnimation","playDealSound","getDealingPosition","targetX","targetY","floor","getAvatarUrl"],"sources":["/Users/zhangyang/Desktop/py/guandan/frontend/src/views/Game.vue"],"sourcesContent":["<template>\n  <div class=\"game-container\">\n    <!-- 游戏信息 -->\n    <div class=\"game-info\">\n      <div class=\"level\">当前等级: {{ currentLevel }}</div>\n      <div class=\"room-id\" v-if=\"roomId\">房间号: {{ roomId }}</div>\n    </div>\n\n    <!-- 其他玩家区域 -->\n    <div class=\"other-players\">\n      <div v-for=\"(player, index) in otherPlayers\" \n           :key=\"index\" \n           class=\"player-area\"\n           :class=\"{ 'player-area--active': player.isActive }\">\n        <div class=\"player-avatar\">\n          <img :src=\"getAvatarUrl(player.avatar)\" :alt=\"player.name\">\n          <div class=\"player-status\" :class=\"{ 'player-status--active': player.isActive }\"></div>\n        </div>\n        <div class=\"player-info\">\n          <div class=\"player-name\">{{ player.name }}</div>\n          <div class=\"card-count\">剩余: {{ player.cardCount }}张</div>\n        </div>\n        <div class=\"played-cards\" v-if=\"player.lastPlayedCards\">\n          <Card\n            v-for=\"(card, cardIndex) in player.lastPlayedCards\"\n            :key=\"cardIndex\"\n            :suit=\"card[0]\"\n            :rank=\"card.slice(1)\"\n            :played=\"true\"\n            :hoverable=\"false\"\n            :position=\"{ x: cardIndex * 20, y: 0 }\"\n          />\n        </div>\n      </div>\n    </div>\n\n    <!-- 玩家手牌区域 -->\n    <div class=\"player-hand\">\n      <div class=\"cards\">\n        <Card\n          v-for=\"(card, index) in playerHand\"\n          :key=\"index\"\n          :suit=\"card[0]\"\n          :rank=\"card.slice(1)\"\n          :selected=\"selectedCards.includes(card)\"\n          @click=\"toggleCardSelection(card)\"\n          :position=\"{ x: index * 20, y: 0 }\"\n          :index=\"index\"\n        />\n      </div>\n      <div class=\"controls\">\n        <button @click=\"playCards\" :disabled=\"!canPlay\" class=\"btn btn-primary\">\n          出牌\n        </button>\n        <button @click=\"passTurn\" :disabled=\"!canPass\" class=\"btn btn-secondary\">\n          过牌\n        </button>\n      </div>\n    </div>\n\n    <!-- 粒子效果 -->\n    <ParticleEffect\n      v-if=\"showParticles\"\n      :color=\"particleColor\"\n      :count=\"30\"\n    />\n\n    <!-- 游戏结束弹窗 -->\n    <div v-if=\"gameEnd\" class=\"game-end-modal\">\n      <div class=\"modal-content\">\n        <h2>游戏结束</h2>\n        <p>{{ gameEndMessage }}</p>\n        <button @click=\"startNewGame\" class=\"btn btn-primary\">开始新游戏</button>\n      </div>\n    </div>\n\n    <!-- 洗牌动画 -->\n    <div v-if=\"isShuffling\" class=\"shuffle-animation\">\n      <div class=\"shuffle-cards\">\n        <Card\n          v-for=\"n in 52\"\n          :key=\"n\"\n          :face-down=\"true\"\n          :hoverable=\"false\"\n          :position=\"getShufflePosition(n)\"\n        />\n      </div>\n    </div>\n\n    <!-- 发牌动画 -->\n    <div v-if=\"isDealing\" class=\"dealing-animation\">\n      <div class=\"dealing-cards\">\n        <Card\n          v-for=\"(card, index) in dealingCards\"\n          :key=\"index\"\n          :suit=\"card[0]\"\n          :rank=\"card.slice(1)\"\n          :face-down=\"true\"\n          :hoverable=\"false\"\n          :position=\"getDealingPosition(index)\"\n        />\n      </div>\n    </div>\n\n    <!-- 烟花效果 -->\n    <FireworkEffect\n      v-if=\"showFireworks\"\n      :count=\"5\"\n    />\n\n    <!-- 音效管理器 -->\n    <SoundManager ref=\"soundManager\" />\n  </div>\n</template>\n\n<script>\nimport Card from '../components/Card.vue';\nimport ParticleEffect from '../components/ParticleEffect.vue';\nimport FireworkEffect from '../components/FireworkEffect.vue';\nimport SoundManager from '../components/SoundManager.vue';\nimport { io } from 'socket.io-client';\n\nexport default {\n  name: 'Game',\n  components: {\n    Card,\n    ParticleEffect,\n    FireworkEffect,\n    SoundManager\n  },\n  data() {\n    return {\n      socket: null,\n      roomId: null,\n      currentLevel: 2,\n      playerHand: [],\n      selectedCards: [],\n      otherPlayers: [],\n      gameEnd: false,\n      gameEndMessage: '',\n      canPlay: false,\n      canPass: false,\n      isShuffling: false,\n      isDealing: false,\n      dealingCards: [],\n      showParticles: false,\n      particleColor: '#ffd700',\n      showFireworks: false\n    }\n  },\n  created() {\n    this.roomId = this.$route.params.roomId;\n    this.connectSocket();\n  },\n  methods: {\n    connectSocket() {\n      this.socket = io('http://localhost:8000');\n      \n      this.socket.on('connect', () => {\n        console.log('Connected to server');\n        if (this.roomId) {\n          this.socket.emit('join_room', { room_id: this.roomId });\n        } else {\n          this.socket.emit('create_room');\n        }\n      });\n\n      this.socket.on('room_created', (data) => {\n        this.roomId = data.room_id;\n        this.$router.push(`/game/${this.roomId}`);\n      });\n\n      this.socket.on('game_state_update', (data) => {\n        this.updateGameState(data);\n      });\n\n      this.socket.on('card_played', (data) => {\n        this.handleCardPlayed(data);\n      });\n\n      this.socket.on('turn_passed', (data) => {\n        this.handleTurnPassed(data);\n      });\n\n      this.socket.on('game_end', (data) => {\n        this.handleGameEnd(data);\n      });\n    },\n    updateGameState(data) {\n      this.currentLevel = data.current_level;\n      this.playerHand = data.players_hands[0];\n      this.updateOtherPlayers(data);\n      this.updateControls(data);\n    },\n    updateOtherPlayers(data) {\n      this.otherPlayers = data.players_hands.slice(1).map((hand, index) => ({\n        name: `玩家${index + 2}`,\n        cardCount: hand.length,\n        lastPlayedCards: data.last_played_cards,\n        isActive: data.current_player === index + 1,\n        avatar: `/assets/images/avatar${(index % 4) + 1}.png`\n      }));\n    },\n    updateControls(data) {\n      this.canPlay = data.current_player === 0;\n      this.canPass = data.last_played_cards && data.current_player === 0;\n    },\n    toggleCardSelection(card) {\n      if (!this.canPlay) return;\n      const index = this.selectedCards.indexOf(card);\n      if (index === -1) {\n        this.selectedCards.push(card);\n      } else {\n        this.selectedCards.splice(index, 1);\n      }\n    },\n    playCards() {\n      if (this.selectedCards.length === 0) return;\n      this.socket.emit('play_card', {\n        room_id: this.roomId,\n        cards: this.selectedCards\n      });\n      this.showParticles = true;\n      this.$refs.soundManager.playCardSound();\n      setTimeout(() => {\n        this.showParticles = false;\n      }, 1000);\n      this.selectedCards = [];\n    },\n    passTurn() {\n      this.socket.emit('pass_turn', {\n        room_id: this.roomId\n      });\n    },\n    handleCardPlayed(data) {\n      // 更新其他玩家的出牌信息\n      const playerIndex = this.otherPlayers.findIndex(p => p.name === data.player);\n      if (playerIndex !== -1) {\n        this.otherPlayers[playerIndex].lastPlayedCards = data.cards;\n      }\n    },\n    handleTurnPassed(data) {\n      // 更新过牌信息\n      const playerIndex = this.otherPlayers.findIndex(p => p.name === data.player);\n      if (playerIndex !== -1) {\n        this.otherPlayers[playerIndex].lastPlayedCards = null;\n      }\n    },\n    handleGameEnd(data) {\n      this.gameEnd = true;\n      const isWinner = data.winner_team === 0;\n      this.gameEndMessage = isWinner ? '恭喜你获胜！' : '很遗憾，你输了。';\n      \n      if (isWinner) {\n        this.showFireworks = true;\n        this.$refs.soundManager.playWinSound();\n        this.$refs.soundManager.playFireworkSound();\n      } else {\n        this.$refs.soundManager.playLoseSound();\n      }\n      \n      if (data.new_level > this.currentLevel) {\n        this.$refs.soundManager.playLevelUpSound();\n      }\n    },\n    startNewGame() {\n      this.gameEnd = false;\n      this.showFireworks = false;\n      this.$refs.soundManager.playButtonSound();\n      this.socket.emit('create_room');\n    },\n    getShufflePosition(index) {\n      const centerX = window.innerWidth / 2;\n      const centerY = window.innerHeight / 2;\n      const radius = 200;\n      const angle = (index / 52) * Math.PI * 2;\n      return {\n        x: centerX + Math.cos(angle) * radius,\n        y: centerY + Math.sin(angle) * radius\n      };\n    },\n    startShuffleAnimation() {\n      this.isShuffling = true;\n      this.$refs.soundManager.playShuffleSound();\n      setTimeout(() => {\n        this.isShuffling = false;\n        this.startDealingAnimation();\n      }, 2000);\n    },\n    startDealingAnimation() {\n      this.isDealing = true;\n      this.dealingCards = [...this.playerHand];\n      this.$refs.soundManager.playDealSound();\n      setTimeout(() => {\n        this.isDealing = false;\n      }, 3000);\n    },\n    getDealingPosition(index) {\n      const centerX = window.innerWidth / 2;\n      const centerY = window.innerHeight / 2;\n      const targetX = (index % 13) * 80 - 520;\n      const targetY = Math.floor(index / 13) * 120 - 60;\n      return {\n        x: centerX + targetX,\n        y: centerY + targetY\n      };\n    },\n    getAvatarUrl(avatar) {\n      return avatar || './assets/images/default-avatar.jpg';\n    }\n  }\n}\n</script>\n\n<style scoped>\n.game-container {\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  background-image: url('./assets/images/table-bg.jpg');\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n}\n\n.game-container::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 1;\n}\n\n.game-info {\n  display: flex;\n  justify-content: space-between;\n  padding: 15px;\n  background: rgba(0, 0, 0, 0.6);\n  border-radius: 10px;\n  margin-bottom: 20px;\n  backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  z-index: 2;\n}\n\n.other-players {\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 20px;\n  z-index: 2;\n}\n\n.player-area {\n  background: rgba(0, 0, 0, 0.6);\n  padding: 15px;\n  border-radius: 10px;\n  min-width: 150px;\n  backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  transition: all 0.3s ease;\n}\n\n.player-area--active {\n  border-color: #4CAF50;\n  box-shadow: 0 0 20px rgba(76, 175, 80, 0.3);\n}\n\n.player-avatar {\n  position: relative;\n  width: 60px;\n  height: 60px;\n  margin: 0 auto 10px;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n}\n\n.player-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.player-status {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: #666;\n  border: 2px solid rgba(0, 0, 0, 0.5);\n}\n\n.player-status--active {\n  background: #4CAF50;\n  box-shadow: 0 0 10px #4CAF50;\n}\n\n.player-info {\n  text-align: center;\n  margin-bottom: 10px;\n}\n\n.player-name {\n  font-size: 1.2em;\n  margin-bottom: 5px;\n  color: #fff;\n  text-shadow: 0 0 10px rgba(255, 255, 255, 0.5);\n}\n\n.card-count {\n  font-size: 0.9em;\n  opacity: 0.8;\n  margin-bottom: 10px;\n}\n\n.played-cards {\n  display: flex;\n  justify-content: center;\n  gap: 5px;\n  margin-top: 10px;\n  min-height: 100px;\n}\n\n.player-hand {\n  margin-top: auto;\n  background: rgba(0, 0, 0, 0.6);\n  padding: 20px;\n  border-radius: 10px;\n  backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  z-index: 2;\n}\n\n.cards {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-bottom: 20px;\n  min-height: 120px;\n}\n\n.controls {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n}\n\n.btn {\n  padding: 12px 24px;\n  font-size: 1.1em;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: all 0.3s;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-weight: bold;\n}\n\n.btn-primary {\n  background: #4CAF50;\n  color: white;\n}\n\n.btn-primary:hover:not(:disabled) {\n  background: #45a049;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.btn-secondary {\n  background: #f44336;\n  color: white;\n}\n\n.btn-secondary:hover:not(:disabled) {\n  background: #da190b;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.btn:disabled {\n  background: #cccccc;\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n}\n\n.game-end-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  backdrop-filter: blur(5px);\n}\n\n.modal-content {\n  background: rgba(255, 255, 255, 0.95);\n  padding: 30px;\n  border-radius: 15px;\n  text-align: center;\n  color: #333;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n  animation: modalAppear 0.3s ease-out;\n}\n\n.modal-content h2 {\n  margin-bottom: 20px;\n  color: #2c3e50;\n  font-size: 2em;\n}\n\n.modal-content p {\n  margin-bottom: 20px;\n  font-size: 1.2em;\n  color: #666;\n}\n\n.shuffle-animation {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  animation: fadeIn 0.3s ease-out;\n}\n\n.shuffle-cards {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n.dealing-animation {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  animation: fadeIn 0.3s ease-out;\n}\n\n.dealing-cards {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n.dealing-cards .card {\n  position: absolute;\n  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n  animation: dealCard 0.5s ease-out forwards;\n}\n\n@keyframes modalAppear {\n  from {\n    transform: scale(0.8);\n    opacity: 0;\n  }\n  to {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes dealCard {\n  from {\n    transform: translate(0, 0) scale(0.5);\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n/* 移动端适配 */\n@media (max-width: 768px) {\n  .game-container {\n    padding: 10px;\n  }\n\n  .game-info {\n    flex-direction: column;\n    gap: 5px;\n    padding: 10px;\n  }\n\n  .other-players {\n    flex-wrap: wrap;\n    gap: 10px;\n  }\n\n  .player-avatar {\n    width: 40px;\n    height: 40px;\n  }\n\n  .player-status {\n    width: 8px;\n    height: 8px;\n  }\n\n  .player-area {\n    min-width: 100px;\n    padding: 10px;\n  }\n\n  .player-hand {\n    padding: 10px;\n  }\n\n  .cards {\n    gap: 5px;\n    min-height: 100px;\n  }\n\n  .controls {\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  .btn {\n    width: 100%;\n    padding: 10px;\n  }\n\n  .modal-content {\n    width: 90%;\n    max-width: 300px;\n    padding: 20px;\n  }\n\n  .modal-content h2 {\n    font-size: 1.5em;\n  }\n\n  .modal-content p {\n    font-size: 1em;\n  }\n}\n\n/* 横屏适配 */\n@media (max-height: 600px) and (orientation: landscape) {\n  .game-container {\n    padding: 5px;\n  }\n\n  .game-info {\n    margin-bottom: 10px;\n  }\n\n  .other-players {\n    margin-bottom: 10px;\n  }\n\n  .player-avatar {\n    width: 30px;\n    height: 30px;\n  }\n\n  .player-status {\n    width: 6px;\n    height: 6px;\n  }\n\n  .player-area {\n    min-width: 80px;\n    padding: 5px;\n  }\n\n  .player-name {\n    font-size: 1em;\n  }\n\n  .card-count {\n    font-size: 0.8em;\n  }\n\n  .played-cards {\n    min-height: 80px;\n  }\n\n  .player-hand {\n    padding: 10px;\n  }\n\n  .cards {\n    min-height: 100px;\n  }\n}\n\n/* 烟花效果容器 */\n.firework-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n  z-index: 1001;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}