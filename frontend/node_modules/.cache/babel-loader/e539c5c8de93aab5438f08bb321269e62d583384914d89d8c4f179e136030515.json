{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"firework-container\",\n  ref: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.fireworks, (firework, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"firework\",\n      style: _normalizeStyle(firework.style)\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(firework.particles, (particle, pIndex) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: pIndex,\n        class: \"particle\",\n        style: _normalizeStyle(particle.style)\n      }, null, 4 /* STYLE */);\n    }), 128 /* KEYED_FRAGMENT */))], 4 /* STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","fireworks","firework","index","key","style","_normalizeStyle","particles","particle","pIndex"],"sources":["/Users/zhangyang/Desktop/py/guandan/frontend/src/components/FireworkEffect.vue"],"sourcesContent":["<template>\n  <div class=\"firework-container\" ref=\"container\">\n    <div v-for=\"(firework, index) in fireworks\" \n         :key=\"index\" \n         class=\"firework\"\n         :style=\"firework.style\">\n      <div v-for=\"(particle, pIndex) in firework.particles\" \n           :key=\"pIndex\" \n           class=\"particle\"\n           :style=\"particle.style\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'FireworkEffect',\n  props: {\n    count: {\n      type: Number,\n      default: 5\n    }\n  },\n  data() {\n    return {\n      fireworks: [],\n      colors: ['#ff0000', '#00ff00', '#0000ff', '#ffff00', '#ff00ff', '#00ffff']\n    }\n  },\n  methods: {\n    createParticle(x, y, color) {\n      const angle = Math.random() * Math.PI * 2;\n      const velocity = Math.random() * 3 + 2;\n      return {\n        x,\n        y,\n        color,\n        velocityX: Math.cos(angle) * velocity,\n        velocityY: Math.sin(angle) * velocity,\n        size: Math.random() * 3 + 2,\n        opacity: 1,\n        style: {}\n      };\n    },\n    createFirework() {\n      const x = Math.random() * 100;\n      const y = Math.random() * 100;\n      const color = this.colors[Math.floor(Math.random() * this.colors.length)];\n      const particleCount = Math.floor(Math.random() * 20) + 20;\n      \n      return {\n        x,\n        y,\n        color,\n        particles: Array(particleCount).fill().map(() => this.createParticle(x, y, color)),\n        style: {\n          left: `${x}%`,\n          top: `${y}%`\n        }\n      };\n    },\n    updateParticleStyle(particle) {\n      particle.style = {\n        left: `${particle.x}%`,\n        top: `${particle.y}%`,\n        width: `${particle.size}px`,\n        height: `${particle.size}px`,\n        backgroundColor: particle.color,\n        opacity: particle.opacity\n      };\n    },\n    animate() {\n      this.fireworks.forEach(firework => {\n        firework.particles.forEach(particle => {\n          particle.x += particle.velocityX;\n          particle.y += particle.velocityY;\n          particle.velocityY += 0.1; // 重力效果\n          particle.opacity -= 0.01;\n          this.updateParticleStyle(particle);\n        });\n        \n        firework.particles = firework.particles.filter(p => p.opacity > 0);\n      });\n      \n      this.fireworks = this.fireworks.filter(f => f.particles.length > 0);\n      \n      if (this.fireworks.length > 0) {\n        requestAnimationFrame(this.animate);\n      }\n    },\n    start() {\n      this.fireworks = Array(this.count).fill().map(() => this.createFirework());\n      this.animate();\n    }\n  },\n  mounted() {\n    this.start();\n  }\n}\n</script>\n\n<style scoped>\n.firework-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n  z-index: 1000;\n}\n\n.firework {\n  position: absolute;\n  transform: translate(-50%, -50%);\n}\n\n.particle {\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity 0.1s linear;\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC,oBAAoB;EAACC,GAAG,EAAC;;;uBAApCC,mBAAA,CAWM,OAXNC,UAWM,I,kBAVJD,mBAAA,CASME,SAAA,QAXVC,WAAA,CAEqCC,KAAA,CAAAC,SAAS,EAF9C,CAEiBC,QAAQ,EAAEC,KAAK;yBAA5BP,mBAAA,CASM;MARAQ,GAAG,EAAED,KAAK;MACXT,KAAK,EAAC,UAAU;MACfW,KAAK,EALfC,eAAA,CAKiBJ,QAAQ,CAACG,KAAK;2BACzBT,mBAAA,CAIME,SAAA,QAVZC,WAAA,CAMwCG,QAAQ,CAACK,SAAS,EAN1D,CAMmBC,QAAQ,EAAEC,MAAM;2BAA7Bb,mBAAA,CAIM;QAHAQ,GAAG,EAAEK,MAAM;QACZf,KAAK,EAAC,UAAU;QACfW,KAAK,EATjBC,eAAA,CASmBE,QAAQ,CAACH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}