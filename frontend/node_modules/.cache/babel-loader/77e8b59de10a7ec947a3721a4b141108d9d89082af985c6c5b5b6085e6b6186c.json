{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createBlock as _createBlock, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"game-container\"\n};\nconst _hoisted_2 = {\n  class: \"game-info\"\n};\nconst _hoisted_3 = {\n  class: \"level\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"room-id\"\n};\nconst _hoisted_5 = {\n  class: \"other-players\"\n};\nconst _hoisted_6 = {\n  class: \"player-avatar\"\n};\nconst _hoisted_7 = [\"src\", \"alt\"];\nconst _hoisted_8 = {\n  class: \"player-info\"\n};\nconst _hoisted_9 = {\n  class: \"player-name\"\n};\nconst _hoisted_10 = {\n  class: \"card-count\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"played-cards\"\n};\nconst _hoisted_12 = {\n  class: \"player-hand\"\n};\nconst _hoisted_13 = {\n  class: \"cards\"\n};\nconst _hoisted_14 = {\n  class: \"controls\"\n};\nconst _hoisted_15 = [\"disabled\"];\nconst _hoisted_16 = [\"disabled\"];\nconst _hoisted_17 = {\n  key: 1,\n  class: \"game-end-modal\"\n};\nconst _hoisted_18 = {\n  class: \"modal-content\"\n};\nconst _hoisted_19 = {\n  key: 2,\n  class: \"shuffle-animation\"\n};\nconst _hoisted_20 = {\n  class: \"shuffle-cards\"\n};\nconst _hoisted_21 = {\n  key: 3,\n  class: \"dealing-animation\"\n};\nconst _hoisted_22 = {\n  class: \"dealing-cards\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Card = _resolveComponent(\"Card\");\n  const _component_ParticleEffect = _resolveComponent(\"ParticleEffect\");\n  const _component_FireworkEffect = _resolveComponent(\"FireworkEffect\");\n  const _component_SoundManager = _resolveComponent(\"SoundManager\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 游戏信息 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, \"当前等级: \" + _toDisplayString($data.currentLevel), 1 /* TEXT */), $data.roomId ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"房间号: \" + _toDisplayString($data.roomId), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 其他玩家区域 \"), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.otherPlayers, (player, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"player-area\", {\n        'player-area--active': player.isActive\n      }])\n    }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n      src: $options.getAvatarUrl(player.avatar),\n      alt: player.name\n    }, null, 8 /* PROPS */, _hoisted_7), _createElementVNode(\"div\", {\n      class: _normalizeClass([\"player-status\", {\n        'player-status--active': player.isActive\n      }])\n    }, null, 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString(player.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, \"剩余: \" + _toDisplayString(player.cardCount) + \"张\", 1 /* TEXT */)]), player.lastPlayedCards ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(player.lastPlayedCards, (card, cardIndex) => {\n      return _openBlock(), _createBlock(_component_Card, {\n        key: cardIndex,\n        suit: card[0],\n        rank: card.slice(1),\n        played: true,\n        hoverable: false,\n        position: {\n          x: cardIndex * 20,\n          y: 0\n        }\n      }, null, 8 /* PROPS */, [\"suit\", \"rank\", \"position\"]);\n    }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 玩家手牌区域 \"), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.playerHand, (card, index) => {\n    return _openBlock(), _createBlock(_component_Card, {\n      key: index,\n      suit: card[0],\n      rank: card.slice(1),\n      selected: $data.selectedCards.includes(card),\n      onClick: $event => $options.toggleCardSelection(card),\n      position: {\n        x: index * 20,\n        y: 0\n      },\n      index: index\n    }, null, 8 /* PROPS */, [\"suit\", \"rank\", \"selected\", \"onClick\", \"position\", \"index\"]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.playCards && $options.playCards(...args)),\n    disabled: !$data.canPlay,\n    class: \"btn btn-primary\"\n  }, \" 出牌 \", 8 /* PROPS */, _hoisted_15), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.passTurn && $options.passTurn(...args)),\n    disabled: !$data.canPass,\n    class: \"btn btn-secondary\"\n  }, \" 过牌 \", 8 /* PROPS */, _hoisted_16)])]), _createCommentVNode(\" 粒子效果 \"), $data.showParticles ? (_openBlock(), _createBlock(_component_ParticleEffect, {\n    key: 0,\n    color: $data.particleColor,\n    count: 30\n  }, null, 8 /* PROPS */, [\"color\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 游戏结束弹窗 \"), $data.gameEnd ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"游戏结束\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($data.gameEndMessage), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.startNewGame && $options.startNewGame(...args)),\n    class: \"btn btn-primary\"\n  }, \"开始新游戏\")])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 洗牌动画 \"), $data.isShuffling ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_createElementVNode(\"div\", _hoisted_20, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(52, n => {\n    return _createVNode(_component_Card, {\n      key: n,\n      \"face-down\": true,\n      hoverable: false,\n      position: $options.getShufflePosition(n)\n    }, null, 8 /* PROPS */, [\"position\"]);\n  }), 64 /* STABLE_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 发牌动画 \"), $data.isDealing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_createElementVNode(\"div\", _hoisted_22, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.dealingCards, (card, index) => {\n    return _openBlock(), _createBlock(_component_Card, {\n      key: index,\n      suit: card[0],\n      rank: card.slice(1),\n      \"face-down\": true,\n      hoverable: false,\n      position: $options.getDealingPosition(index)\n    }, null, 8 /* PROPS */, [\"suit\", \"rank\", \"position\"]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 烟花效果 \"), $data.showFireworks ? (_openBlock(), _createBlock(_component_FireworkEffect, {\n    key: 4,\n    count: 5\n  })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 音效管理器 \"), _createVNode(_component_SoundManager, {\n    ref: \"soundManager\"\n  }, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","$data","currentLevel","roomId","_hoisted_4","_hoisted_5","_Fragment","_renderList","otherPlayers","player","index","_normalizeClass","isActive","_hoisted_6","src","$options","getAvatarUrl","avatar","alt","name","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","cardCount","lastPlayedCards","_hoisted_11","card","cardIndex","_createBlock","_component_Card","suit","rank","slice","played","hoverable","position","x","y","_hoisted_12","_hoisted_13","playerHand","selected","selectedCards","includes","onClick","$event","toggleCardSelection","_hoisted_14","_cache","args","playCards","disabled","canPlay","_hoisted_15","passTurn","canPass","_hoisted_16","showParticles","_component_ParticleEffect","color","particleColor","count","gameEnd","_hoisted_17","_hoisted_18","gameEndMessage","startNewGame","isShuffling","_hoisted_19","_hoisted_20","n","_createVNode","getShufflePosition","isDealing","_hoisted_21","_hoisted_22","dealingCards","getDealingPosition","showFireworks","_component_FireworkEffect","_component_SoundManager","ref"],"sources":["/Users/zhangyang/Desktop/py/guandan/frontend/src/views/Game.vue"],"sourcesContent":["<template>\n  <div class=\"game-container\">\n    <!-- 游戏信息 -->\n    <div class=\"game-info\">\n      <div class=\"level\">当前等级: {{ currentLevel }}</div>\n      <div class=\"room-id\" v-if=\"roomId\">房间号: {{ roomId }}</div>\n    </div>\n\n    <!-- 其他玩家区域 -->\n    <div class=\"other-players\">\n      <div v-for=\"(player, index) in otherPlayers\" \n           :key=\"index\" \n           class=\"player-area\"\n           :class=\"{ 'player-area--active': player.isActive }\">\n        <div class=\"player-avatar\">\n          <img :src=\"getAvatarUrl(player.avatar)\" :alt=\"player.name\">\n          <div class=\"player-status\" :class=\"{ 'player-status--active': player.isActive }\"></div>\n        </div>\n        <div class=\"player-info\">\n          <div class=\"player-name\">{{ player.name }}</div>\n          <div class=\"card-count\">剩余: {{ player.cardCount }}张</div>\n        </div>\n        <div class=\"played-cards\" v-if=\"player.lastPlayedCards\">\n          <Card\n            v-for=\"(card, cardIndex) in player.lastPlayedCards\"\n            :key=\"cardIndex\"\n            :suit=\"card[0]\"\n            :rank=\"card.slice(1)\"\n            :played=\"true\"\n            :hoverable=\"false\"\n            :position=\"{ x: cardIndex * 20, y: 0 }\"\n          />\n        </div>\n      </div>\n    </div>\n\n    <!-- 玩家手牌区域 -->\n    <div class=\"player-hand\">\n      <div class=\"cards\">\n        <Card\n          v-for=\"(card, index) in playerHand\"\n          :key=\"index\"\n          :suit=\"card[0]\"\n          :rank=\"card.slice(1)\"\n          :selected=\"selectedCards.includes(card)\"\n          @click=\"toggleCardSelection(card)\"\n          :position=\"{ x: index * 20, y: 0 }\"\n          :index=\"index\"\n        />\n      </div>\n      <div class=\"controls\">\n        <button @click=\"playCards\" :disabled=\"!canPlay\" class=\"btn btn-primary\">\n          出牌\n        </button>\n        <button @click=\"passTurn\" :disabled=\"!canPass\" class=\"btn btn-secondary\">\n          过牌\n        </button>\n      </div>\n    </div>\n\n    <!-- 粒子效果 -->\n    <ParticleEffect\n      v-if=\"showParticles\"\n      :color=\"particleColor\"\n      :count=\"30\"\n    />\n\n    <!-- 游戏结束弹窗 -->\n    <div v-if=\"gameEnd\" class=\"game-end-modal\">\n      <div class=\"modal-content\">\n        <h2>游戏结束</h2>\n        <p>{{ gameEndMessage }}</p>\n        <button @click=\"startNewGame\" class=\"btn btn-primary\">开始新游戏</button>\n      </div>\n    </div>\n\n    <!-- 洗牌动画 -->\n    <div v-if=\"isShuffling\" class=\"shuffle-animation\">\n      <div class=\"shuffle-cards\">\n        <Card\n          v-for=\"n in 52\"\n          :key=\"n\"\n          :face-down=\"true\"\n          :hoverable=\"false\"\n          :position=\"getShufflePosition(n)\"\n        />\n      </div>\n    </div>\n\n    <!-- 发牌动画 -->\n    <div v-if=\"isDealing\" class=\"dealing-animation\">\n      <div class=\"dealing-cards\">\n        <Card\n          v-for=\"(card, index) in dealingCards\"\n          :key=\"index\"\n          :suit=\"card[0]\"\n          :rank=\"card.slice(1)\"\n          :face-down=\"true\"\n          :hoverable=\"false\"\n          :position=\"getDealingPosition(index)\"\n        />\n      </div>\n    </div>\n\n    <!-- 烟花效果 -->\n    <FireworkEffect\n      v-if=\"showFireworks\"\n      :count=\"5\"\n    />\n\n    <!-- 音效管理器 -->\n    <SoundManager ref=\"soundManager\" />\n  </div>\n</template>\n\n<script>\nimport Card from '../components/Card.vue';\nimport ParticleEffect from '../components/ParticleEffect.vue';\nimport FireworkEffect from '../components/FireworkEffect.vue';\nimport SoundManager from '../components/SoundManager.vue';\nimport { io } from 'socket.io-client';\n\nexport default {\n  name: 'Game',\n  components: {\n    Card,\n    ParticleEffect,\n    FireworkEffect,\n    SoundManager\n  },\n  data() {\n    return {\n      socket: null,\n      roomId: null,\n      currentLevel: 2,\n      playerHand: [],\n      selectedCards: [],\n      otherPlayers: [],\n      gameEnd: false,\n      gameEndMessage: '',\n      canPlay: false,\n      canPass: false,\n      isShuffling: false,\n      isDealing: false,\n      dealingCards: [],\n      showParticles: false,\n      particleColor: '#ffd700',\n      showFireworks: false\n    }\n  },\n  created() {\n    this.roomId = this.$route.params.roomId;\n    this.connectSocket();\n  },\n  methods: {\n    connectSocket() {\n      this.socket = io('http://localhost:8000');\n      \n      this.socket.on('connect', () => {\n        console.log('Connected to server');\n        if (this.roomId) {\n          this.socket.emit('join_room', { room_id: this.roomId });\n        } else {\n          this.socket.emit('create_room');\n        }\n      });\n\n      this.socket.on('room_created', (data) => {\n        this.roomId = data.room_id;\n        this.$router.push(`/game/${this.roomId}`);\n      });\n\n      this.socket.on('game_state_update', (data) => {\n        this.updateGameState(data);\n      });\n\n      this.socket.on('card_played', (data) => {\n        this.handleCardPlayed(data);\n      });\n\n      this.socket.on('turn_passed', (data) => {\n        this.handleTurnPassed(data);\n      });\n\n      this.socket.on('game_end', (data) => {\n        this.handleGameEnd(data);\n      });\n    },\n    updateGameState(data) {\n      this.currentLevel = data.current_level;\n      this.playerHand = data.players_hands[0];\n      this.updateOtherPlayers(data);\n      this.updateControls(data);\n    },\n    updateOtherPlayers(data) {\n      this.otherPlayers = data.players_hands.slice(1).map((hand, index) => ({\n        name: `玩家${index + 2}`,\n        cardCount: hand.length,\n        lastPlayedCards: data.last_played_cards,\n        isActive: data.current_player === index + 1,\n        avatar: `/assets/images/avatar${(index % 4) + 1}.png`\n      }));\n    },\n    updateControls(data) {\n      this.canPlay = data.current_player === 0;\n      this.canPass = data.last_played_cards && data.current_player === 0;\n    },\n    toggleCardSelection(card) {\n      if (!this.canPlay) return;\n      const index = this.selectedCards.indexOf(card);\n      if (index === -1) {\n        this.selectedCards.push(card);\n      } else {\n        this.selectedCards.splice(index, 1);\n      }\n    },\n    playCards() {\n      if (this.selectedCards.length === 0) return;\n      this.socket.emit('play_card', {\n        room_id: this.roomId,\n        cards: this.selectedCards\n      });\n      this.showParticles = true;\n      this.$refs.soundManager.playCardSound();\n      setTimeout(() => {\n        this.showParticles = false;\n      }, 1000);\n      this.selectedCards = [];\n    },\n    passTurn() {\n      this.socket.emit('pass_turn', {\n        room_id: this.roomId\n      });\n    },\n    handleCardPlayed(data) {\n      // 更新其他玩家的出牌信息\n      const playerIndex = this.otherPlayers.findIndex(p => p.name === data.player);\n      if (playerIndex !== -1) {\n        this.otherPlayers[playerIndex].lastPlayedCards = data.cards;\n      }\n    },\n    handleTurnPassed(data) {\n      // 更新过牌信息\n      const playerIndex = this.otherPlayers.findIndex(p => p.name === data.player);\n      if (playerIndex !== -1) {\n        this.otherPlayers[playerIndex].lastPlayedCards = null;\n      }\n    },\n    handleGameEnd(data) {\n      this.gameEnd = true;\n      const isWinner = data.winner_team === 0;\n      this.gameEndMessage = isWinner ? '恭喜你获胜！' : '很遗憾，你输了。';\n      \n      if (isWinner) {\n        this.showFireworks = true;\n        this.$refs.soundManager.playWinSound();\n        this.$refs.soundManager.playFireworkSound();\n      } else {\n        this.$refs.soundManager.playLoseSound();\n      }\n      \n      if (data.new_level > this.currentLevel) {\n        this.$refs.soundManager.playLevelUpSound();\n      }\n    },\n    startNewGame() {\n      this.gameEnd = false;\n      this.showFireworks = false;\n      this.$refs.soundManager.playButtonSound();\n      this.socket.emit('create_room');\n    },\n    getShufflePosition(index) {\n      const centerX = window.innerWidth / 2;\n      const centerY = window.innerHeight / 2;\n      const radius = 200;\n      const angle = (index / 52) * Math.PI * 2;\n      return {\n        x: centerX + Math.cos(angle) * radius,\n        y: centerY + Math.sin(angle) * radius\n      };\n    },\n    startShuffleAnimation() {\n      this.isShuffling = true;\n      this.$refs.soundManager.playShuffleSound();\n      setTimeout(() => {\n        this.isShuffling = false;\n        this.startDealingAnimation();\n      }, 2000);\n    },\n    startDealingAnimation() {\n      this.isDealing = true;\n      this.dealingCards = [...this.playerHand];\n      this.$refs.soundManager.playDealSound();\n      setTimeout(() => {\n        this.isDealing = false;\n      }, 3000);\n    },\n    getDealingPosition(index) {\n      const centerX = window.innerWidth / 2;\n      const centerY = window.innerHeight / 2;\n      const targetX = (index % 13) * 80 - 520;\n      const targetY = Math.floor(index / 13) * 120 - 60;\n      return {\n        x: centerX + targetX,\n        y: centerY + targetY\n      };\n    },\n    getAvatarUrl(avatar) {\n      return avatar || './assets/images/default-avatar.jpg';\n    }\n  }\n}\n</script>\n\n<style scoped>\n.game-container {\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  background-image: url('/assets/images/table-bg.jpg');\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n}\n\n.game-container::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 1;\n}\n\n.game-info {\n  display: flex;\n  justify-content: space-between;\n  padding: 15px;\n  background: rgba(0, 0, 0, 0.6);\n  border-radius: 10px;\n  margin-bottom: 20px;\n  backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  z-index: 2;\n}\n\n.other-players {\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 20px;\n  z-index: 2;\n}\n\n.player-area {\n  background: rgba(0, 0, 0, 0.6);\n  padding: 15px;\n  border-radius: 10px;\n  min-width: 150px;\n  backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  transition: all 0.3s ease;\n}\n\n.player-area--active {\n  border-color: #4CAF50;\n  box-shadow: 0 0 20px rgba(76, 175, 80, 0.3);\n}\n\n.player-avatar {\n  position: relative;\n  width: 60px;\n  height: 60px;\n  margin: 0 auto 10px;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n}\n\n.player-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.player-status {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: #666;\n  border: 2px solid rgba(0, 0, 0, 0.5);\n}\n\n.player-status--active {\n  background: #4CAF50;\n  box-shadow: 0 0 10px #4CAF50;\n}\n\n.player-info {\n  text-align: center;\n  margin-bottom: 10px;\n}\n\n.player-name {\n  font-size: 1.2em;\n  margin-bottom: 5px;\n  color: #fff;\n  text-shadow: 0 0 10px rgba(255, 255, 255, 0.5);\n}\n\n.card-count {\n  font-size: 0.9em;\n  opacity: 0.8;\n  margin-bottom: 10px;\n}\n\n.played-cards {\n  display: flex;\n  justify-content: center;\n  gap: 5px;\n  margin-top: 10px;\n  min-height: 100px;\n}\n\n.player-hand {\n  margin-top: auto;\n  background: rgba(0, 0, 0, 0.6);\n  padding: 20px;\n  border-radius: 10px;\n  backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  z-index: 2;\n}\n\n.cards {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-bottom: 20px;\n  min-height: 120px;\n}\n\n.controls {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n}\n\n.btn {\n  padding: 12px 24px;\n  font-size: 1.1em;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: all 0.3s;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-weight: bold;\n}\n\n.btn-primary {\n  background: #4CAF50;\n  color: white;\n}\n\n.btn-primary:hover:not(:disabled) {\n  background: #45a049;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.btn-secondary {\n  background: #f44336;\n  color: white;\n}\n\n.btn-secondary:hover:not(:disabled) {\n  background: #da190b;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.btn:disabled {\n  background: #cccccc;\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n}\n\n.game-end-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  backdrop-filter: blur(5px);\n}\n\n.modal-content {\n  background: rgba(255, 255, 255, 0.95);\n  padding: 30px;\n  border-radius: 15px;\n  text-align: center;\n  color: #333;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n  animation: modalAppear 0.3s ease-out;\n}\n\n.modal-content h2 {\n  margin-bottom: 20px;\n  color: #2c3e50;\n  font-size: 2em;\n}\n\n.modal-content p {\n  margin-bottom: 20px;\n  font-size: 1.2em;\n  color: #666;\n}\n\n.shuffle-animation {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  animation: fadeIn 0.3s ease-out;\n}\n\n.shuffle-cards {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n.dealing-animation {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  animation: fadeIn 0.3s ease-out;\n}\n\n.dealing-cards {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n.dealing-cards .card {\n  position: absolute;\n  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n  animation: dealCard 0.5s ease-out forwards;\n}\n\n@keyframes modalAppear {\n  from {\n    transform: scale(0.8);\n    opacity: 0;\n  }\n  to {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes dealCard {\n  from {\n    transform: translate(0, 0) scale(0.5);\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n/* 移动端适配 */\n@media (max-width: 768px) {\n  .game-container {\n    padding: 10px;\n  }\n\n  .game-info {\n    flex-direction: column;\n    gap: 5px;\n    padding: 10px;\n  }\n\n  .other-players {\n    flex-wrap: wrap;\n    gap: 10px;\n  }\n\n  .player-avatar {\n    width: 40px;\n    height: 40px;\n  }\n\n  .player-status {\n    width: 8px;\n    height: 8px;\n  }\n\n  .player-area {\n    min-width: 100px;\n    padding: 10px;\n  }\n\n  .player-hand {\n    padding: 10px;\n  }\n\n  .cards {\n    gap: 5px;\n    min-height: 100px;\n  }\n\n  .controls {\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  .btn {\n    width: 100%;\n    padding: 10px;\n  }\n\n  .modal-content {\n    width: 90%;\n    max-width: 300px;\n    padding: 20px;\n  }\n\n  .modal-content h2 {\n    font-size: 1.5em;\n  }\n\n  .modal-content p {\n    font-size: 1em;\n  }\n}\n\n/* 横屏适配 */\n@media (max-height: 600px) and (orientation: landscape) {\n  .game-container {\n    padding: 5px;\n  }\n\n  .game-info {\n    margin-bottom: 10px;\n  }\n\n  .other-players {\n    margin-bottom: 10px;\n  }\n\n  .player-avatar {\n    width: 30px;\n    height: 30px;\n  }\n\n  .player-status {\n    width: 6px;\n    height: 6px;\n  }\n\n  .player-area {\n    min-width: 80px;\n    padding: 5px;\n  }\n\n  .player-name {\n    font-size: 1em;\n  }\n\n  .card-count {\n    font-size: 0.8em;\n  }\n\n  .played-cards {\n    min-height: 80px;\n  }\n\n  .player-hand {\n    padding: 10px;\n  }\n\n  .cards {\n    min-height: 100px;\n  }\n}\n\n/* 烟花效果容器 */\n.firework-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n  z-index: 1001;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}