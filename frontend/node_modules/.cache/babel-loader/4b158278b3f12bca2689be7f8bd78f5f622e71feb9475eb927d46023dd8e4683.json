{"ast":null,"code":"import api from '../api';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      selectedMode: '',\n      playerName: ''\n    };\n  },\n  methods: {\n    selectMode(mode) {\n      this.selectedMode = mode;\n    },\n    async startGame() {\n      try {\n        // 创建游戏\n        const response = await api.get(`/game/create?player_name=${encodeURIComponent(this.playerName)}&mode=${this.selectedMode}`);\n        if (this.selectedMode === 'single') {\n          // 单人模式直接进入游戏\n          this.$router.push({\n            name: 'Game',\n            params: {\n              roomId: response.data.roomId\n            },\n            query: {\n              playerId: response.data.playerId\n            }\n          });\n        } else {\n          // 多人模式进入大厅\n          this.$router.push({\n            name: 'Lobby',\n            params: {\n              roomId: response.data.roomId\n            },\n            query: {\n              playerId: response.data.playerId\n            }\n          });\n        }\n      } catch (error) {\n        console.error('创建游戏失败', error);\n        alert('创建游戏失败，请重试');\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","selectedMode","playerName","methods","selectMode","mode","startGame","response","get","encodeURIComponent","$router","push","params","roomId","query","playerId","error","console","alert"],"sources":["/Users/zhangyang/Desktop/py/guandan/frontend/src/views/Home.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <h1>掼蛋游戏</h1>\n    <div class=\"mode-selection\">\n      <div class=\"mode-card\" @click=\"selectMode('single')\">\n        <h2>单人模式</h2>\n        <p>与AI对战</p>\n      </div>\n      <div class=\"mode-card\" @click=\"selectMode('multiplayer')\">\n        <h2>多人模式</h2>\n        <p>邀请好友一起玩</p>\n      </div>\n    </div>\n    <div v-if=\"selectedMode\" class=\"player-info\">\n      <input v-model=\"playerName\" placeholder=\"请输入您的名字\" />\n      <button @click=\"startGame\" :disabled=\"!playerName\">开始游戏</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport api from '../api';\n\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      selectedMode: '',\n      playerName: ''\n    }\n  },\n  methods: {\n    selectMode(mode) {\n      this.selectedMode = mode;\n    },\n    async startGame() {\n      try {\n        // 创建游戏\n        const response = await api.get(`/game/create?player_name=${encodeURIComponent(this.playerName)}&mode=${this.selectedMode}`);\n        \n        if (this.selectedMode === 'single') {\n          // 单人模式直接进入游戏\n          this.$router.push({\n            name: 'Game',\n            params: { roomId: response.data.roomId },\n            query: { playerId: response.data.playerId }\n          });\n        } else {\n          // 多人模式进入大厅\n          this.$router.push({\n            name: 'Lobby',\n            params: { roomId: response.data.roomId },\n            query: { playerId: response.data.playerId }\n          });\n        }\n      } catch (error) {\n        console.error('创建游戏失败', error);\n        alert('创建游戏失败，请重试');\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  text-align: center;\n}\n\nh1 {\n  font-size: 2.5rem;\n  color: #2c3e50;\n  margin-bottom: 40px;\n}\n\n.mode-selection {\n  display: flex;\n  justify-content: center;\n  gap: 30px;\n  margin-bottom: 40px;\n}\n\n.mode-card {\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  padding: 20px;\n  width: 200px;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n  cursor: pointer;\n  transition: transform 0.3s, box-shadow 0.3s;\n}\n\n.mode-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 6px 12px rgba(0,0,0,0.15);\n}\n\n.mode-card h2 {\n  font-size: 1.5rem;\n  margin-bottom: 10px;\n  color: #2c3e50;\n}\n\n.mode-card p {\n  color: #6c757d;\n}\n\n.player-info {\n  margin-top: 30px;\n}\n\ninput {\n  padding: 10px 15px;\n  border: 1px solid #ced4da;\n  border-radius: 4px;\n  font-size: 16px;\n  width: 300px;\n  margin-right: 10px;\n}\n\nbutton {\n  padding: 10px 20px;\n  background-color: #42b983;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\nbutton:hover {\n  background-color: #3aa876;\n}\n\nbutton:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n</style> "],"mappings":"AAqBA,OAAOA,GAAE,MAAO,QAAQ;AAExB,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE;IACd;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,IAAI,EAAE;MACf,IAAI,CAACJ,YAAW,GAAII,IAAI;IAC1B,CAAC;IACD,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMT,GAAG,CAACU,GAAG,CAAC,4BAA4BC,kBAAkB,CAAC,IAAI,CAACP,UAAU,CAAC,SAAS,IAAI,CAACD,YAAY,EAAE,CAAC;QAE3H,IAAI,IAAI,CAACA,YAAW,KAAM,QAAQ,EAAE;UAClC;UACA,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC;YAChBZ,IAAI,EAAE,MAAM;YACZa,MAAM,EAAE;cAAEC,MAAM,EAAEN,QAAQ,CAACP,IAAI,CAACa;YAAO,CAAC;YACxCC,KAAK,EAAE;cAAEC,QAAQ,EAAER,QAAQ,CAACP,IAAI,CAACe;YAAS;UAC5C,CAAC,CAAC;QACJ,OAAO;UACL;UACA,IAAI,CAACL,OAAO,CAACC,IAAI,CAAC;YAChBZ,IAAI,EAAE,OAAO;YACba,MAAM,EAAE;cAAEC,MAAM,EAAEN,QAAQ,CAACP,IAAI,CAACa;YAAO,CAAC;YACxCC,KAAK,EAAE;cAAEC,QAAQ,EAAER,QAAQ,CAACP,IAAI,CAACe;YAAS;UAC5C,CAAC,CAAC;QACJ;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9BE,KAAK,CAAC,YAAY,CAAC;MACrB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}