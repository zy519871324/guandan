{"ast":null,"code":"import { createStore } from 'vuex';\nimport io from 'socket.io-client';\nexport default createStore({\n  state: {\n    socket: null,\n    gameState: null,\n    playerIndex: null,\n    roomId: null,\n    isConnected: false\n  },\n  mutations: {\n    setSocket(state, socket) {\n      state.socket = socket;\n    },\n    setGameState(state, gameState) {\n      state.gameState = gameState;\n    },\n    setPlayerIndex(state, index) {\n      state.playerIndex = index;\n    },\n    setRoomId(state, roomId) {\n      state.roomId = roomId;\n    },\n    setConnectionStatus(state, status) {\n      state.isConnected = status;\n    }\n  },\n  actions: {\n    connectSocket({\n      commit\n    }) {\n      const socket = io('http://localhost:8000');\n      socket.on('connect', () => {\n        commit('setConnectionStatus', true);\n      });\n      socket.on('disconnect', () => {\n        commit('setConnectionStatus', false);\n      });\n      socket.on('game_state_update', gameState => {\n        commit('setGameState', gameState);\n      });\n      commit('setSocket', socket);\n    },\n    createRoom({\n      state,\n      commit\n    }) {\n      const roomId = Math.random().toString(36).substring(7);\n      state.socket.emit('create_room', {\n        room_id: roomId\n      });\n      commit('setRoomId', roomId);\n    },\n    joinRoom({\n      state,\n      commit\n    }, roomId) {\n      state.socket.emit('join_room', {\n        room_id: roomId\n      });\n      commit('setRoomId', roomId);\n    },\n    playCards({\n      state\n    }, cards) {\n      state.socket.emit('play_card', {\n        room_id: state.roomId,\n        cards: cards\n      });\n    },\n    passTurn({\n      state\n    }) {\n      state.socket.emit('pass_turn', {\n        room_id: state.roomId\n      });\n    }\n  },\n  getters: {\n    isMyTurn: state => {\n      return state.gameState && state.gameState.current_player === state.playerIndex;\n    },\n    myHand: state => {\n      return state.gameState ? state.gameState.players_hands[state.playerIndex] : [];\n    }\n  }\n});","map":{"version":3,"names":["createStore","io","state","socket","gameState","playerIndex","roomId","isConnected","mutations","setSocket","setGameState","setPlayerIndex","index","setRoomId","setConnectionStatus","status","actions","connectSocket","commit","on","createRoom","Math","random","toString","substring","emit","room_id","joinRoom","playCards","cards","passTurn","getters","isMyTurn","current_player","myHand","players_hands"],"sources":["/Users/zhangyang/Desktop/py/guandan/frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport io from 'socket.io-client'\n\nexport default createStore({\n  state: {\n    socket: null,\n    gameState: null,\n    playerIndex: null,\n    roomId: null,\n    isConnected: false\n  },\n  mutations: {\n    setSocket(state, socket) {\n      state.socket = socket\n    },\n    setGameState(state, gameState) {\n      state.gameState = gameState\n    },\n    setPlayerIndex(state, index) {\n      state.playerIndex = index\n    },\n    setRoomId(state, roomId) {\n      state.roomId = roomId\n    },\n    setConnectionStatus(state, status) {\n      state.isConnected = status\n    }\n  },\n  actions: {\n    connectSocket({ commit }) {\n      const socket = io('http://localhost:8000')\n      \n      socket.on('connect', () => {\n        commit('setConnectionStatus', true)\n      })\n      \n      socket.on('disconnect', () => {\n        commit('setConnectionStatus', false)\n      })\n      \n      socket.on('game_state_update', (gameState) => {\n        commit('setGameState', gameState)\n      })\n      \n      commit('setSocket', socket)\n    },\n    \n    createRoom({ state, commit }) {\n      const roomId = Math.random().toString(36).substring(7)\n      state.socket.emit('create_room', { room_id: roomId })\n      commit('setRoomId', roomId)\n    },\n    \n    joinRoom({ state, commit }, roomId) {\n      state.socket.emit('join_room', { room_id: roomId })\n      commit('setRoomId', roomId)\n    },\n    \n    playCards({ state }, cards) {\n      state.socket.emit('play_card', {\n        room_id: state.roomId,\n        cards: cards\n      })\n    },\n    \n    passTurn({ state }) {\n      state.socket.emit('pass_turn', {\n        room_id: state.roomId\n      })\n    }\n  },\n  getters: {\n    isMyTurn: (state) => {\n      return state.gameState && state.gameState.current_player === state.playerIndex\n    },\n    myHand: (state) => {\n      return state.gameState ? state.gameState.players_hands[state.playerIndex] : []\n    }\n  }\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}