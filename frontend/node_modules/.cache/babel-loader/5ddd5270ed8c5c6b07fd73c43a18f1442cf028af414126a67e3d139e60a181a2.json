{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home\"\n};\nconst _hoisted_2 = {\n  class: \"mode-selection\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"player-info\"\n};\nconst _hoisted_4 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h1\", null, \"掼蛋游戏\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: \"mode-card\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.selectMode('single'))\n  }, _cache[4] || (_cache[4] = [_createElementVNode(\"h2\", null, \"单人模式\", -1 /* HOISTED */), _createElementVNode(\"p\", null, \"与AI对战\", -1 /* HOISTED */)])), _createElementVNode(\"div\", {\n    class: \"mode-card\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.selectMode('multiplayer'))\n  }, _cache[5] || (_cache[5] = [_createElementVNode(\"h2\", null, \"多人模式\", -1 /* HOISTED */), _createElementVNode(\"p\", null, \"邀请好友一起玩\", -1 /* HOISTED */)]))]), $data.selectedMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.playerName = $event),\n    placeholder: \"请输入您的名字\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.playerName]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.startGame && $options.startGame(...args)),\n    disabled: !$data.playerName\n  }, \"开始游戏\", 8 /* PROPS */, _hoisted_4)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","$event","$options","selectMode","$data","selectedMode","_hoisted_3","playerName","placeholder","args","startGame","disabled","_hoisted_4","_createCommentVNode"],"sources":["/Users/zhangyang/Desktop/py/guandan/frontend/src/views/Home.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <h1>掼蛋游戏</h1>\n    <div class=\"mode-selection\">\n      <div class=\"mode-card\" @click=\"selectMode('single')\">\n        <h2>单人模式</h2>\n        <p>与AI对战</p>\n      </div>\n      <div class=\"mode-card\" @click=\"selectMode('multiplayer')\">\n        <h2>多人模式</h2>\n        <p>邀请好友一起玩</p>\n      </div>\n    </div>\n    <div v-if=\"selectedMode\" class=\"player-info\">\n      <input v-model=\"playerName\" placeholder=\"请输入您的名字\" />\n      <button @click=\"startGame\" :disabled=\"!playerName\">开始游戏</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport api from '../api';\n\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      selectedMode: '',\n      playerName: ''\n    }\n  },\n  methods: {\n    selectMode(mode) {\n      this.selectedMode = mode;\n    },\n    async startGame() {\n      try {\n        // 创建游戏\n        const response = await api.get(`/game/create?player_name=${encodeURIComponent(this.playerName)}&mode=${this.selectedMode}`);\n        \n        if (this.selectedMode === 'single') {\n          // 单人模式直接进入游戏\n          this.$router.push({\n            name: 'Game',\n            params: { roomId: response.data.roomId },\n            query: { playerId: response.data.playerId }\n          });\n        } else {\n          // 多人模式进入大厅\n          this.$router.push({\n            name: 'Lobby',\n            params: { roomId: response.data.roomId },\n            query: { playerId: response.data.playerId }\n          });\n        }\n      } catch (error) {\n        console.error('创建游戏失败', error);\n        alert('创建游戏失败，请重试');\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  text-align: center;\n}\n\nh1 {\n  font-size: 2.5rem;\n  color: #2c3e50;\n  margin-bottom: 40px;\n}\n\n.mode-selection {\n  display: flex;\n  justify-content: center;\n  gap: 30px;\n  margin-bottom: 40px;\n}\n\n.mode-card {\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  padding: 20px;\n  width: 200px;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n  cursor: pointer;\n  transition: transform 0.3s, box-shadow 0.3s;\n}\n\n.mode-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 6px 12px rgba(0,0,0,0.15);\n}\n\n.mode-card h2 {\n  font-size: 1.5rem;\n  margin-bottom: 10px;\n  color: #2c3e50;\n}\n\n.mode-card p {\n  color: #6c757d;\n}\n\n.player-info {\n  margin-top: 30px;\n}\n\ninput {\n  padding: 10px 15px;\n  border: 1px solid #ced4da;\n  border-radius: 4px;\n  font-size: 16px;\n  width: 300px;\n  margin-right: 10px;\n}\n\nbutton {\n  padding: 10px 20px;\n  background-color: #42b983;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\nbutton:hover {\n  background-color: #3aa876;\n}\n\nbutton:disabled {\n  background-color: #cccccc;\n  cursor: not-allowed;\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAM;;EAEVA,KAAK,EAAC;AAAgB;;EAH/BC,GAAA;EAa6BD,KAAK,EAAC;;mBAbnC;;uBACEE,mBAAA,CAgBM,OAhBNC,UAgBM,G,0BAfJC,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CASM,OATNC,UASM,GARJD,mBAAA,CAGM;IAHDJ,KAAK,EAAC,WAAW;IAAEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU;gCACvCN,mBAAA,CAAa,YAAT,MAAI,qBACRA,mBAAA,CAAY,WAAT,OAAK,oB,IAEVA,mBAAA,CAGM;IAHDJ,KAAK,EAAC,WAAW;IAAEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU;gCACvCN,mBAAA,CAAa,YAAT,MAAI,qBACRA,mBAAA,CAAc,WAAX,SAAO,oB,MAGHO,KAAA,CAAAC,YAAY,I,cAAvBV,mBAAA,CAGM,OAHNW,UAGM,G,gBAFJT,mBAAA,CAAoD;IAd1D,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAcsBG,KAAA,CAAAG,UAAU,GAAAN,MAAA;IAAEO,WAAW,EAAC;iDAAxBJ,KAAA,CAAAG,UAAU,E,GAC1BV,mBAAA,CAAgE;IAAvDE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAS,IAAA,KAAEP,QAAA,CAAAQ,SAAA,IAAAR,QAAA,CAAAQ,SAAA,IAAAD,IAAA,CAAS;IAAGE,QAAQ,GAAGP,KAAA,CAAAG;KAAY,MAAI,iBAf7DK,UAAA,E,KAAAC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}