{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/zhangyang/Desktop/py/guandan/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/zhangyang/Desktop/py/guandan/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport Card from '../components/Card.vue';\nimport ParticleEffect from '../components/ParticleEffect.vue';\nimport FireworkEffect from '../components/FireworkEffect.vue';\nimport SoundManager from '../components/SoundManager.vue';\nimport { io } from 'socket.io-client';\nexport default {\n  name: 'Game',\n  components: {\n    Card: Card,\n    ParticleEffect: ParticleEffect,\n    FireworkEffect: FireworkEffect,\n    SoundManager: SoundManager\n  },\n  data: function data() {\n    return {\n      socket: null,\n      roomId: null,\n      currentLevel: 2,\n      playerHand: [],\n      selectedCards: [],\n      otherPlayers: [],\n      gameEnd: false,\n      gameEndMessage: '',\n      canPlay: false,\n      canPass: false,\n      isShuffling: false,\n      isDealing: false,\n      dealingCards: [],\n      showParticles: false,\n      particleColor: '#ffd700',\n      showFireworks: false\n    };\n  },\n  created: function created() {\n    this.roomId = this.$route.params.roomId;\n    this.connectSocket();\n  },\n  mounted: function mounted() {\n    // 自动开始游戏\n    this.startGame();\n  },\n  methods: {\n    connectSocket: function connectSocket() {\n      var _this = this;\n      this.socket = io('http://localhost:8000');\n      this.socket.on('connect', function () {\n        console.log('Connected to server');\n        if (_this.roomId) {\n          _this.socket.emit('join_room', {\n            room_id: _this.roomId\n          });\n        } else {\n          _this.socket.emit('create_room');\n        }\n      });\n      this.socket.on('room_created', function (data) {\n        _this.roomId = data.room_id;\n        _this.$router.push(\"/game/\".concat(_this.roomId));\n      });\n      this.socket.on('game_state_update', function (data) {\n        _this.updateGameState(data);\n      });\n      this.socket.on('card_played', function (data) {\n        _this.handleCardPlayed(data);\n      });\n      this.socket.on('turn_passed', function (data) {\n        _this.handleTurnPassed(data);\n      });\n      this.socket.on('game_end', function (data) {\n        _this.handleGameEnd(data);\n      });\n    },\n    updateGameState: function updateGameState(data) {\n      this.currentLevel = data.current_level;\n      this.playerHand = data.players_hands[0];\n      this.updateOtherPlayers(data);\n      this.updateControls(data);\n    },\n    updateOtherPlayers: function updateOtherPlayers(data) {\n      this.otherPlayers = data.players_hands.slice(1).map(function (hand, index) {\n        return {\n          name: \"\\u73A9\\u5BB6\".concat(index + 2),\n          cardCount: hand.length,\n          lastPlayedCards: data.last_played_cards,\n          isActive: data.current_player === index + 1,\n          avatar: \"/assets/images/avatar\".concat(index % 4 + 1, \".png\")\n        };\n      });\n    },\n    updateControls: function updateControls(data) {\n      this.canPlay = data.current_player === 0;\n      this.canPass = data.last_played_cards && data.current_player === 0;\n    },\n    toggleCardSelection: function toggleCardSelection(card) {\n      if (!this.canPlay) return;\n      var index = this.selectedCards.indexOf(card);\n      if (index === -1) {\n        this.selectedCards.push(card);\n      } else {\n        this.selectedCards.splice(index, 1);\n      }\n    },\n    playCards: function playCards() {\n      var _this2 = this;\n      if (this.selectedCards.length === 0) return;\n      this.socket.emit('play_card', {\n        room_id: this.roomId,\n        cards: this.selectedCards\n      });\n      this.showParticles = true;\n      this.$refs.soundManager.playCardSound();\n      setTimeout(function () {\n        _this2.showParticles = false;\n      }, 1000);\n      this.selectedCards = [];\n    },\n    passTurn: function passTurn() {\n      this.socket.emit('pass_turn', {\n        room_id: this.roomId\n      });\n    },\n    handleCardPlayed: function handleCardPlayed(data) {\n      // 更新其他玩家的出牌信息\n      var playerIndex = this.otherPlayers.findIndex(function (p) {\n        return p.name === data.player;\n      });\n      if (playerIndex !== -1) {\n        this.otherPlayers[playerIndex].lastPlayedCards = data.cards;\n      }\n    },\n    handleTurnPassed: function handleTurnPassed(data) {\n      // 更新过牌信息\n      var playerIndex = this.otherPlayers.findIndex(function (p) {\n        return p.name === data.player;\n      });\n      if (playerIndex !== -1) {\n        this.otherPlayers[playerIndex].lastPlayedCards = null;\n      }\n    },\n    handleGameEnd: function handleGameEnd(data) {\n      this.gameEnd = true;\n      var isWinner = data.winner_team === 0;\n      this.gameEndMessage = isWinner ? '恭喜你获胜！' : '很遗憾，你输了。';\n      if (isWinner) {\n        this.showFireworks = true;\n        this.$refs.soundManager.playWinSound();\n        this.$refs.soundManager.playFireworkSound();\n      } else {\n        this.$refs.soundManager.playLoseSound();\n      }\n      if (data.new_level > this.currentLevel) {\n        this.$refs.soundManager.playLevelUpSound();\n      }\n    },\n    startNewGame: function startNewGame() {\n      this.gameEnd = false;\n      this.showFireworks = false;\n      this.$refs.soundManager.playButtonSound();\n      this.socket.emit('create_room');\n    },\n    getShufflePosition: function getShufflePosition(index) {\n      var centerX = window.innerWidth / 2;\n      var centerY = window.innerHeight / 2;\n      var radius = 200;\n      var angle = index / 52 * Math.PI * 2;\n      return {\n        x: centerX + Math.cos(angle) * radius,\n        y: centerY + Math.sin(angle) * radius\n      };\n    },\n    startShuffleAnimation: function startShuffleAnimation() {\n      var _this3 = this;\n      this.isShuffling = true;\n      this.$refs.soundManager.playShuffleSound();\n      setTimeout(function () {\n        _this3.isShuffling = false;\n        _this3.startDealingAnimation();\n      }, 2000);\n    },\n    startDealingAnimation: function startDealingAnimation() {\n      var _this4 = this;\n      this.isDealing = true;\n      this.dealingCards = _toConsumableArray(this.playerHand);\n      this.$refs.soundManager.playDealSound();\n      setTimeout(function () {\n        _this4.isDealing = false;\n      }, 3000);\n    },\n    getDealingPosition: function getDealingPosition(index) {\n      var centerX = window.innerWidth / 2;\n      var centerY = window.innerHeight / 2;\n      var targetX = index % 13 * 80 - 520;\n      var targetY = Math.floor(index / 13) * 120 - 60;\n      return {\n        x: centerX + targetX,\n        y: centerY + targetY\n      };\n    },\n    getAvatarUrl: function getAvatarUrl(avatar) {\n      return avatar || ''; // 暂时返回空字符串\n    },\n    initializeDeck: function initializeDeck() {\n      var deck = [];\n      var suits = ['♠', '♥', '♦', '♣'];\n      var ranks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n\n      // 添加两副牌\n      for (var i = 0; i < 2; i++) {\n        // 添加普通牌\n        var _iterator = _createForOfIteratorHelper(suits),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var suit = _step.value;\n            var _iterator2 = _createForOfIteratorHelper(ranks),\n              _step2;\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var rank = _step2.value;\n                deck.push(suit + rank);\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          }\n          // 添加大小王\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        deck.push('小王');\n        deck.push('大王');\n      }\n      return deck;\n    },\n    shuffleDeck: function shuffleDeck(deck) {\n      for (var i = deck.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var _ref = [deck[j], deck[i]];\n        deck[i] = _ref[0];\n        deck[j] = _ref[1];\n      }\n    },\n    dealCards: function dealCards(deck) {\n      // 每个玩家27张牌\n      for (var i = 0; i < 27; i++) {\n        for (var player = 0; player < 4; player++) {\n          this.gameState.players[player].hand.push(deck.pop());\n        }\n      }\n\n      // 更新玩家手牌显示\n      this.playerHand = this.gameState.players[0].hand;\n\n      // 更新其他玩家信息\n      this.otherPlayers = this.gameState.players.slice(1).map(function (player, index) {\n        return {\n          name: \"\\u7535\\u8111\".concat(index + 1),\n          cardCount: player.hand.length,\n          lastPlayedCards: null,\n          isActive: false,\n          avatar: ''\n        };\n      });\n    },\n    startGame: function startGame() {\n      // 重置游戏状态\n      this.gameState = {\n        currentPlayer: 0,\n        lastPlay: null,\n        lastPlayer: -1,\n        gameStarted: true,\n        gameOver: false,\n        winner: null,\n        players: [{\n          id: 0,\n          name: '玩家',\n          hand: [],\n          isHuman: true\n        }, {\n          id: 1,\n          name: '电脑1',\n          hand: [],\n          isHuman: false\n        }, {\n          id: 2,\n          name: '电脑2',\n          hand: [],\n          isHuman: false\n        }, {\n          id: 3,\n          name: '电脑3',\n          hand: [],\n          isHuman: false\n        }]\n      };\n\n      // 初始化牌组\n      var deck = this.initializeDeck();\n\n      // 洗牌\n      this.shuffleDeck(deck);\n\n      // 发牌\n      this.dealCards(deck);\n\n      // 播放发牌音效\n      this.playSound('deal');\n    }\n  }\n};","map":{"version":3,"names":["Card","ParticleEffect","FireworkEffect","SoundManager","io","name","components","data","socket","roomId","currentLevel","playerHand","selectedCards","otherPlayers","gameEnd","gameEndMessage","canPlay","canPass","isShuffling","isDealing","dealingCards","showParticles","particleColor","showFireworks","created","$route","params","connectSocket","mounted","startGame","methods","_this","on","console","log","emit","room_id","$router","push","concat","updateGameState","handleCardPlayed","handleTurnPassed","handleGameEnd","current_level","players_hands","updateOtherPlayers","updateControls","slice","map","hand","index","cardCount","length","lastPlayedCards","last_played_cards","isActive","current_player","avatar","toggleCardSelection","card","indexOf","splice","playCards","_this2","cards","$refs","soundManager","playCardSound","setTimeout","passTurn","playerIndex","findIndex","p","player","isWinner","winner_team","playWinSound","playFireworkSound","playLoseSound","new_level","playLevelUpSound","startNewGame","playButtonSound","getShufflePosition","centerX","window","innerWidth","centerY","innerHeight","radius","angle","Math","PI","x","cos","y","sin","startShuffleAnimation","_this3","playShuffleSound","startDealingAnimation","_this4","_toConsumableArray","playDealSound","getDealingPosition","targetX","targetY","floor","getAvatarUrl","initializeDeck","deck","suits","ranks","i","_iterator","_createForOfIteratorHelper","_step","s","n","done","suit","value","_iterator2","_step2","rank","err","e","f","shuffleDeck","j","random","_ref","dealCards","gameState","players","pop","currentPlayer","lastPlay","lastPlayer","gameStarted","gameOver","winner","id","isHuman","playSound"],"sources":["/Users/zhangyang/Desktop/py/guandan/frontend/src/views/Game.vue"],"sourcesContent":["<template>\n  <div class=\"game-container\">\n    <!-- 游戏信息 -->\n    <div class=\"game-info\">\n      <div class=\"level\">当前等级: {{ currentLevel }}</div>\n      <div class=\"room-id\" v-if=\"roomId\">房间号: {{ roomId }}</div>\n    </div>\n\n    <!-- 其他玩家区域 -->\n    <div class=\"other-players\">\n      <div v-for=\"(player, index) in otherPlayers\" \n           :key=\"index\" \n           class=\"player-area\"\n           :class=\"{ 'player-area--active': player.isActive }\">\n        <div class=\"player-avatar\">\n          <img :src=\"getAvatarUrl(player.avatar)\" :alt=\"player.name\">\n          <div class=\"player-status\" :class=\"{ 'player-status--active': player.isActive }\"></div>\n        </div>\n        <div class=\"player-info\">\n          <div class=\"player-name\">{{ player.name }}</div>\n          <div class=\"card-count\">剩余: {{ player.cardCount }}张</div>\n        </div>\n        <div class=\"played-cards\" v-if=\"player.lastPlayedCards\">\n          <Card\n            v-for=\"(card, cardIndex) in player.lastPlayedCards\"\n            :key=\"cardIndex\"\n            :suit=\"card[0]\"\n            :rank=\"card.slice(1)\"\n            :played=\"true\"\n            :hoverable=\"false\"\n            :position=\"{ x: cardIndex * 20, y: 0 }\"\n          />\n        </div>\n      </div>\n    </div>\n\n    <!-- 玩家手牌区域 -->\n    <div class=\"player-hand\">\n      <div class=\"cards\">\n        <Card\n          v-for=\"(card, index) in playerHand\"\n          :key=\"index\"\n          :suit=\"card[0]\"\n          :rank=\"card.slice(1)\"\n          :selected=\"selectedCards.includes(card)\"\n          @click=\"toggleCardSelection(card)\"\n          :position=\"{ x: index * 20, y: 0 }\"\n          :index=\"index\"\n        />\n      </div>\n      <div class=\"controls\">\n        <button @click=\"playCards\" :disabled=\"!canPlay\" class=\"btn btn-primary\">\n          出牌\n        </button>\n        <button @click=\"passTurn\" :disabled=\"!canPass\" class=\"btn btn-secondary\">\n          过牌\n        </button>\n      </div>\n    </div>\n\n    <!-- 粒子效果 -->\n    <ParticleEffect\n      v-if=\"showParticles\"\n      :color=\"particleColor\"\n      :count=\"30\"\n    />\n\n    <!-- 游戏结束弹窗 -->\n    <div v-if=\"gameEnd\" class=\"game-end-modal\">\n      <div class=\"modal-content\">\n        <h2>游戏结束</h2>\n        <p>{{ gameEndMessage }}</p>\n        <button @click=\"startNewGame\" class=\"btn btn-primary\">开始新游戏</button>\n      </div>\n    </div>\n\n    <!-- 洗牌动画 -->\n    <div v-if=\"isShuffling\" class=\"shuffle-animation\">\n      <div class=\"shuffle-cards\">\n        <Card\n          v-for=\"n in 52\"\n          :key=\"n\"\n          :face-down=\"true\"\n          :hoverable=\"false\"\n          :position=\"getShufflePosition(n)\"\n        />\n      </div>\n    </div>\n\n    <!-- 发牌动画 -->\n    <div v-if=\"isDealing\" class=\"dealing-animation\">\n      <div class=\"dealing-cards\">\n        <Card\n          v-for=\"(card, index) in dealingCards\"\n          :key=\"index\"\n          :suit=\"card[0]\"\n          :rank=\"card.slice(1)\"\n          :face-down=\"true\"\n          :hoverable=\"false\"\n          :position=\"getDealingPosition(index)\"\n        />\n      </div>\n    </div>\n\n    <!-- 烟花效果 -->\n    <FireworkEffect\n      v-if=\"showFireworks\"\n      :count=\"5\"\n    />\n\n    <!-- 音效管理器 -->\n    <SoundManager ref=\"soundManager\" />\n  </div>\n</template>\n\n<script>\nimport Card from '../components/Card.vue';\nimport ParticleEffect from '../components/ParticleEffect.vue';\nimport FireworkEffect from '../components/FireworkEffect.vue';\nimport SoundManager from '../components/SoundManager.vue';\nimport { io } from 'socket.io-client';\n\nexport default {\n  name: 'Game',\n  components: {\n    Card,\n    ParticleEffect,\n    FireworkEffect,\n    SoundManager\n  },\n  data() {\n    return {\n      socket: null,\n      roomId: null,\n      currentLevel: 2,\n      playerHand: [],\n      selectedCards: [],\n      otherPlayers: [],\n      gameEnd: false,\n      gameEndMessage: '',\n      canPlay: false,\n      canPass: false,\n      isShuffling: false,\n      isDealing: false,\n      dealingCards: [],\n      showParticles: false,\n      particleColor: '#ffd700',\n      showFireworks: false\n    }\n  },\n  created() {\n    this.roomId = this.$route.params.roomId;\n    this.connectSocket();\n  },\n  mounted() {\n    // 自动开始游戏\n    this.startGame();\n  },\n  methods: {\n    connectSocket() {\n      this.socket = io('http://localhost:8000');\n      \n      this.socket.on('connect', () => {\n        console.log('Connected to server');\n        if (this.roomId) {\n          this.socket.emit('join_room', { room_id: this.roomId });\n        } else {\n          this.socket.emit('create_room');\n        }\n      });\n\n      this.socket.on('room_created', (data) => {\n        this.roomId = data.room_id;\n        this.$router.push(`/game/${this.roomId}`);\n      });\n\n      this.socket.on('game_state_update', (data) => {\n        this.updateGameState(data);\n      });\n\n      this.socket.on('card_played', (data) => {\n        this.handleCardPlayed(data);\n      });\n\n      this.socket.on('turn_passed', (data) => {\n        this.handleTurnPassed(data);\n      });\n\n      this.socket.on('game_end', (data) => {\n        this.handleGameEnd(data);\n      });\n    },\n    updateGameState(data) {\n      this.currentLevel = data.current_level;\n      this.playerHand = data.players_hands[0];\n      this.updateOtherPlayers(data);\n      this.updateControls(data);\n    },\n    updateOtherPlayers(data) {\n      this.otherPlayers = data.players_hands.slice(1).map((hand, index) => ({\n        name: `玩家${index + 2}`,\n        cardCount: hand.length,\n        lastPlayedCards: data.last_played_cards,\n        isActive: data.current_player === index + 1,\n        avatar: `/assets/images/avatar${(index % 4) + 1}.png`\n      }));\n    },\n    updateControls(data) {\n      this.canPlay = data.current_player === 0;\n      this.canPass = data.last_played_cards && data.current_player === 0;\n    },\n    toggleCardSelection(card) {\n      if (!this.canPlay) return;\n      const index = this.selectedCards.indexOf(card);\n      if (index === -1) {\n        this.selectedCards.push(card);\n      } else {\n        this.selectedCards.splice(index, 1);\n      }\n    },\n    playCards() {\n      if (this.selectedCards.length === 0) return;\n      this.socket.emit('play_card', {\n        room_id: this.roomId,\n        cards: this.selectedCards\n      });\n      this.showParticles = true;\n      this.$refs.soundManager.playCardSound();\n      setTimeout(() => {\n        this.showParticles = false;\n      }, 1000);\n      this.selectedCards = [];\n    },\n    passTurn() {\n      this.socket.emit('pass_turn', {\n        room_id: this.roomId\n      });\n    },\n    handleCardPlayed(data) {\n      // 更新其他玩家的出牌信息\n      const playerIndex = this.otherPlayers.findIndex(p => p.name === data.player);\n      if (playerIndex !== -1) {\n        this.otherPlayers[playerIndex].lastPlayedCards = data.cards;\n      }\n    },\n    handleTurnPassed(data) {\n      // 更新过牌信息\n      const playerIndex = this.otherPlayers.findIndex(p => p.name === data.player);\n      if (playerIndex !== -1) {\n        this.otherPlayers[playerIndex].lastPlayedCards = null;\n      }\n    },\n    handleGameEnd(data) {\n      this.gameEnd = true;\n      const isWinner = data.winner_team === 0;\n      this.gameEndMessage = isWinner ? '恭喜你获胜！' : '很遗憾，你输了。';\n      \n      if (isWinner) {\n        this.showFireworks = true;\n        this.$refs.soundManager.playWinSound();\n        this.$refs.soundManager.playFireworkSound();\n      } else {\n        this.$refs.soundManager.playLoseSound();\n      }\n      \n      if (data.new_level > this.currentLevel) {\n        this.$refs.soundManager.playLevelUpSound();\n      }\n    },\n    startNewGame() {\n      this.gameEnd = false;\n      this.showFireworks = false;\n      this.$refs.soundManager.playButtonSound();\n      this.socket.emit('create_room');\n    },\n    getShufflePosition(index) {\n      const centerX = window.innerWidth / 2;\n      const centerY = window.innerHeight / 2;\n      const radius = 200;\n      const angle = (index / 52) * Math.PI * 2;\n      return {\n        x: centerX + Math.cos(angle) * radius,\n        y: centerY + Math.sin(angle) * radius\n      };\n    },\n    startShuffleAnimation() {\n      this.isShuffling = true;\n      this.$refs.soundManager.playShuffleSound();\n      setTimeout(() => {\n        this.isShuffling = false;\n        this.startDealingAnimation();\n      }, 2000);\n    },\n    startDealingAnimation() {\n      this.isDealing = true;\n      this.dealingCards = [...this.playerHand];\n      this.$refs.soundManager.playDealSound();\n      setTimeout(() => {\n        this.isDealing = false;\n      }, 3000);\n    },\n    getDealingPosition(index) {\n      const centerX = window.innerWidth / 2;\n      const centerY = window.innerHeight / 2;\n      const targetX = (index % 13) * 80 - 520;\n      const targetY = Math.floor(index / 13) * 120 - 60;\n      return {\n        x: centerX + targetX,\n        y: centerY + targetY\n      };\n    },\n    getAvatarUrl(avatar) {\n      return avatar || '';  // 暂时返回空字符串\n    },\n    initializeDeck() {\n      const deck = [];\n      const suits = ['♠', '♥', '♦', '♣'];\n      const ranks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\n      \n      // 添加两副牌\n      for (let i = 0; i < 2; i++) {\n        // 添加普通牌\n        for (const suit of suits) {\n          for (const rank of ranks) {\n            deck.push(suit + rank);\n          }\n        }\n        // 添加大小王\n        deck.push('小王');\n        deck.push('大王');\n      }\n      \n      return deck;\n    },\n    shuffleDeck(deck) {\n      for (let i = deck.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [deck[i], deck[j]] = [deck[j], deck[i]];\n      }\n    },\n    dealCards(deck) {\n      // 每个玩家27张牌\n      for (let i = 0; i < 27; i++) {\n        for (let player = 0; player < 4; player++) {\n          this.gameState.players[player].hand.push(deck.pop());\n        }\n      }\n      \n      // 更新玩家手牌显示\n      this.playerHand = this.gameState.players[0].hand;\n      \n      // 更新其他玩家信息\n      this.otherPlayers = this.gameState.players.slice(1).map((player, index) => ({\n        name: `电脑${index + 1}`,\n        cardCount: player.hand.length,\n        lastPlayedCards: null,\n        isActive: false,\n        avatar: ''\n      }));\n    },\n    startGame() {\n      // 重置游戏状态\n      this.gameState = {\n        currentPlayer: 0,\n        lastPlay: null,\n        lastPlayer: -1,\n        gameStarted: true,\n        gameOver: false,\n        winner: null,\n        players: [\n          { id: 0, name: '玩家', hand: [], isHuman: true },\n          { id: 1, name: '电脑1', hand: [], isHuman: false },\n          { id: 2, name: '电脑2', hand: [], isHuman: false },\n          { id: 3, name: '电脑3', hand: [], isHuman: false }\n        ]\n      };\n      \n      // 初始化牌组\n      const deck = this.initializeDeck();\n      \n      // 洗牌\n      this.shuffleDeck(deck);\n      \n      // 发牌\n      this.dealCards(deck);\n      \n      // 播放发牌音效\n      this.playSound('deal');\n    }\n  }\n}\n</script>\n\n<style scoped>\n.game-container {\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  background-color: #1a472a;  /* 使用纯色背景代替图片 */\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n}\n\n.game-container::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 1;\n}\n\n.game-info {\n  display: flex;\n  justify-content: space-between;\n  padding: 15px;\n  background: rgba(0, 0, 0, 0.6);\n  border-radius: 10px;\n  margin-bottom: 20px;\n  backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  z-index: 2;\n}\n\n.other-players {\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 20px;\n  z-index: 2;\n}\n\n.player-area {\n  background: rgba(0, 0, 0, 0.6);\n  padding: 15px;\n  border-radius: 10px;\n  min-width: 150px;\n  backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  transition: all 0.3s ease;\n}\n\n.player-area--active {\n  border-color: #4CAF50;\n  box-shadow: 0 0 20px rgba(76, 175, 80, 0.3);\n}\n\n.player-avatar {\n  position: relative;\n  width: 60px;\n  height: 60px;\n  margin: 0 auto 10px;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n}\n\n.player-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.player-status {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: #666;\n  border: 2px solid rgba(0, 0, 0, 0.5);\n}\n\n.player-status--active {\n  background: #4CAF50;\n  box-shadow: 0 0 10px #4CAF50;\n}\n\n.player-info {\n  text-align: center;\n  margin-bottom: 10px;\n}\n\n.player-name {\n  font-size: 1.2em;\n  margin-bottom: 5px;\n  color: #fff;\n  text-shadow: 0 0 10px rgba(255, 255, 255, 0.5);\n}\n\n.card-count {\n  font-size: 0.9em;\n  opacity: 0.8;\n  margin-bottom: 10px;\n}\n\n.played-cards {\n  display: flex;\n  justify-content: center;\n  gap: 5px;\n  margin-top: 10px;\n  min-height: 100px;\n}\n\n.player-hand {\n  margin-top: auto;\n  background: rgba(0, 0, 0, 0.6);\n  padding: 20px;\n  border-radius: 10px;\n  backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  z-index: 2;\n}\n\n.cards {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-bottom: 20px;\n  min-height: 120px;\n}\n\n.controls {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n}\n\n.btn {\n  padding: 12px 24px;\n  font-size: 1.1em;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: all 0.3s;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-weight: bold;\n}\n\n.btn-primary {\n  background: #4CAF50;\n  color: white;\n}\n\n.btn-primary:hover:not(:disabled) {\n  background: #45a049;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.btn-secondary {\n  background: #f44336;\n  color: white;\n}\n\n.btn-secondary:hover:not(:disabled) {\n  background: #da190b;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.btn:disabled {\n  background: #cccccc;\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n}\n\n.game-end-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  backdrop-filter: blur(5px);\n}\n\n.modal-content {\n  background: rgba(255, 255, 255, 0.95);\n  padding: 30px;\n  border-radius: 15px;\n  text-align: center;\n  color: #333;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n  animation: modalAppear 0.3s ease-out;\n}\n\n.modal-content h2 {\n  margin-bottom: 20px;\n  color: #2c3e50;\n  font-size: 2em;\n}\n\n.modal-content p {\n  margin-bottom: 20px;\n  font-size: 1.2em;\n  color: #666;\n}\n\n.shuffle-animation {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  animation: fadeIn 0.3s ease-out;\n}\n\n.shuffle-cards {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n.dealing-animation {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  animation: fadeIn 0.3s ease-out;\n}\n\n.dealing-cards {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n.dealing-cards .card {\n  position: absolute;\n  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n  animation: dealCard 0.5s ease-out forwards;\n}\n\n@keyframes modalAppear {\n  from {\n    transform: scale(0.8);\n    opacity: 0;\n  }\n  to {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes dealCard {\n  from {\n    transform: translate(0, 0) scale(0.5);\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n/* 移动端适配 */\n@media (max-width: 768px) {\n  .game-container {\n    padding: 10px;\n  }\n\n  .game-info {\n    flex-direction: column;\n    gap: 5px;\n    padding: 10px;\n  }\n\n  .other-players {\n    flex-wrap: wrap;\n    gap: 10px;\n  }\n\n  .player-avatar {\n    width: 40px;\n    height: 40px;\n  }\n\n  .player-status {\n    width: 8px;\n    height: 8px;\n  }\n\n  .player-area {\n    min-width: 100px;\n    padding: 10px;\n  }\n\n  .player-hand {\n    padding: 10px;\n  }\n\n  .cards {\n    gap: 5px;\n    min-height: 100px;\n  }\n\n  .controls {\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  .btn {\n    width: 100%;\n    padding: 10px;\n  }\n\n  .modal-content {\n    width: 90%;\n    max-width: 300px;\n    padding: 20px;\n  }\n\n  .modal-content h2 {\n    font-size: 1.5em;\n  }\n\n  .modal-content p {\n    font-size: 1em;\n  }\n}\n\n/* 横屏适配 */\n@media (max-height: 600px) and (orientation: landscape) {\n  .game-container {\n    padding: 5px;\n  }\n\n  .game-info {\n    margin-bottom: 10px;\n  }\n\n  .other-players {\n    margin-bottom: 10px;\n  }\n\n  .player-avatar {\n    width: 30px;\n    height: 30px;\n  }\n\n  .player-status {\n    width: 6px;\n    height: 6px;\n  }\n\n  .player-area {\n    min-width: 80px;\n    padding: 5px;\n  }\n\n  .player-name {\n    font-size: 1em;\n  }\n\n  .card-count {\n    font-size: 0.8em;\n  }\n\n  .played-cards {\n    min-height: 80px;\n  }\n\n  .player-hand {\n    padding: 10px;\n  }\n\n  .cards {\n    min-height: 100px;\n  }\n}\n\n/* 烟花效果容器 */\n.firework-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n  z-index: 1001;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}